:orphan:

:py:mod:`neural_compressor.benchmark`
=====================================

.. py:module:: neural_compressor.benchmark


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.benchmark.Benchmark



Functions
~~~~~~~~~

.. autoapisummary::

   neural_compressor.benchmark.fit



.. py:class:: Benchmark(conf_fname_or_obj)

   Bases: :py:obj:`object`

   Benchmark class can be used to evaluate the model performance, with the objective
      setting, user can get the data of what they configured in yaml

   :param conf_fname_or_obj: The path to the YAML configuration file or
                             Benchmark_Conf class containing accuracy goal, tuning objective and preferred
                             calibration & quantization tuning space etc.
   :type conf_fname_or_obj: string or obj


.. py:function:: fit(model, config=None, b_dataloader=None, b_func=None)

   Benchmark the model performance with the configure.

   :param model: The model to be benchmarked.
   :type model: object
   :param config: The configuration for benchmark containing accuracy goal,
                  tuning objective and preferred calibration & quantization
                  tuning space etc.
   :type config: BenchmarkConfig
   :param b_dataloader: The dataloader for frameworks.
   :param b_func: customized benchmark function. if user passes the dataloader,
                  then b_func is not needed.


